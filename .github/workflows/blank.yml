name: Workflow con fallback garantizado

on:
  workflow_dispatch:

jobs:
  estado-global:
    name: Inicializar estado
    runs-on: ubuntu-latest
    outputs:
      fallback: ${{ steps.set.outputs.fallback }}
    steps:
      - name: Valor por defecto (fallback activado)
        id: set
        run: echo "fallback=ACTIVADO" >> $GITHUB_OUTPUT

  primer-job:
    name: Primer intento
    runs-on: ubuntu-latest
    needs: estado-global
    timeout-minutes: 0.5
    outputs:
      fallback: ${{ steps.resultado.outputs.fallback }}
    steps:
      - name: Simular posible timeout
        id: tarea
        run: |
          echo "Simulando tarea larga..."
          sleep 70
        continue-on-error: true

      - name: Cambiar estado a OK si termin贸 bien
        id: resultado
        if: success()
        run: echo "fallback=OK" >> $GITHUB_OUTPUT

  fallback:
    name: Job de Fallback
    runs-on: ubuntu-latest
    needs: [estado-global, primer-job]
    # Solo se ejecuta si el fallback final qued贸 ACTIVADO
    if: |
      (needs.primer-job.result == 'failure' || needs.primer-job.result == 'cancelled') &&
      (needs.primer-job.outputs.fallback != 'OK')
    steps:
      - name: Ejecutar l贸gica de fallback
        run: echo "::notice title=Fallback::Primer job fall贸 o fue cancelado. Ejecutando fallback..."
