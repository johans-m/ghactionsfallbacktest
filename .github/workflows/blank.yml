name: Workflow con fallback garantizado

on:
  workflow_dispatch:

jobs:
  estado-global:
    name: Estado Global
    runs-on: ubuntu-latest
    outputs:
      fallback: ${{ steps.definir.outputs.fallback }}
    steps:
      - name: Definir estado por defecto
        id: definir
        run: echo "fallback=FALLBACK" >> $GITHUB_OUTPUT

  primer-job:
    name: Primer Job
    runs-on: ubuntu-latest
    needs: estado-global
    timeout-minutes: 0.1
    outputs:
      fallback: ${{ steps.set-status.outputs.fallback }}
    steps:
      - name: Simular tarea (con posible timeout)
        id: tarea
        run: |
          echo "Ejecutando algo largo..."
          sleep 70  # Simular timeout aquí
        continue-on-error: true

      - name: Establecer estado si termina OK
        id: set-status
        if: success()
        run: echo "fallback=OK" >> $GITHUB_OUTPUT

  segundo-job:
    name: Fallback Job
    runs-on: ubuntu-latest
    needs: [estado-global, primer-job]
    if: needs.primer-job.outputs.fallback != 'OK'
    steps:
      - name: Ejecutar fallback
        run: |
          echo "::notice title=Fallback Activado::Se ejecuta el fallback porque el primer job no se completó correctamente o se cortó por timeout"
